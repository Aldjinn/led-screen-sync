name: Build & Release

on:
  workflow_run:
    workflows: ["Test & Coverage"]
    types:
      - completed
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: release
    strategy:
      matrix:
        include:
          - GOOS: linux
            GOARCH: amd64
            BIN_NAME: dcsbr_linux_amd64
          - GOOS: linux
            GOARCH: arm64
            BIN_NAME: dcsbr_linux_arm64
          - GOOS: windows
            GOARCH: amd64
            BIN_NAME: dcsbr_windows_amd64.exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Build binary
        run: |
          mkdir -p bin
          GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -v -o bin/${{ matrix.BIN_NAME }} ./cmd/dcsbr
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.BIN_NAME }}
          path: bin/${{ matrix.BIN_NAME }}
      - name: Upload binary to VirusTotal
        id: virustotal
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VT_API_KEY }}
          files: bin/${{ matrix.BIN_NAME }}
      - name: Print VirusTotal analysis URLs
        run: |
          echo "VirusTotal analysis URL (analysis): ${{ steps.virustotal.outputs.analysis }}"
      - name: Write VirusTotal analysis permalink to summary
        uses: actions/github-script@v7
        with:
          script: |
            const permalink = process.env['VIRUSTOTAL_PERMALINK'] || '';
            let summary = `## VirusTotal Analysis URL\n`;
            // Extract the actual VirusTotal URL if the permalink contains '='
            let vtUrl = '';
            if (permalink.includes('=')) {
              vtUrl = permalink.substring(permalink.indexOf('=') + 1);
            } else {
              vtUrl = permalink;
            }
            if (vtUrl) summary += `- [Permalink](${vtUrl})\n`;
            core.summary.addRaw(summary).write();
        env:
          VIRUSTOTAL_PERMALINK: ${{ steps.virustotal.outputs.analysis }}
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./bin
      - name: Set version from tag
        id: get_version
        run: |
          echo "version=${GITHUB_REF_NAME}" >> $GITHUB_OUTPUT
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./bin/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
