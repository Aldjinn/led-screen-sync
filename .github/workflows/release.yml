name: Release

on:
  release:
    types: [created]

permissions:
  contents: write
  actions: read
  id-token: write

jobs:
  build:
    runs-on: windows-latest
    environment: default
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          
      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

      - name: Build Windows binary
        run: |
          mkdir -p bin
          go build -ldflags "-H=windowsgui" -o bin/led-screen-sync.exe
        
      - name: Verify binary exists
        run: |
          if (Test-Path "bin/led-screen-sync.exe") {
            Write-Host "Binary found: $(Get-Item bin/led-screen-sync.exe | Select-Object Name, Length)"
            Get-FileHash bin/led-screen-sync.exe
          } else {
            Write-Host "ERROR: Binary not found!"
            exit 1
          }
        
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: led-screen-sync.exe
          path: bin/led-screen-sync.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    environment: default
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./bin

      - name: List downloaded files
        run: find ./bin -name "*.exe" -type f

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./bin/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
